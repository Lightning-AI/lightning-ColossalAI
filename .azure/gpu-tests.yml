# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  tags:
    include:
      - '*'
  branches:
    include:
      - "main"
      - "refs/tags/*"

pr:
  branches:
    include:
      - "main"
  paths:
    include:
      - ".actions/**"
      - ".azure/gpu-tests-pytorch.yml"
      - "tests/**"
      - "pyproject.toml"  # includes pytest config
      - "requirements/**"
      - "src/**"
    exclude:
      - "*.md"
      - "**/*.md"

jobs:
  - job: testing
    # how long to run the job before automatically cancelling
    timeoutInMinutes: "80"
    # how much time to give 'run always even if cancelled tasks' before stopping them
    cancelTimeoutInMinutes: "2"
    strategy:
      matrix:
        'PyTorch & strategies':  # this uses torch 1.12 as not all strategies support 1.13 yet
          image: "pytorchlightning/pytorch_lightning:base-cuda-py3.9-torch1.12-cuda11.6.1"
          scope: "strategies"
          PACKAGE_NAME: "pytorch"
        'PyTorch | latest':
          image: "pytorchlightning/pytorch_lightning:base-cuda-py3.9-torch1.13-cuda11.7.1"
          scope: ""
          PACKAGE_NAME: "pytorch"
        'Lightning pkg':
          image: "pytorchlightning/pytorch_lightning:base-cuda-py3.9-torch1.13-cuda11.7.1"
          scope: ""
          PACKAGE_NAME: "lightning"
    pool: lit-rtx-3090
    variables:
      DEVICES: $( python -c 'print("$(Agent.Name)".split("_")[-1])' )
      FREEZE_REQUIREMENTS: "1"
    container:
      image: $(image)
      # default shm size is 64m. Increase it to avoid:
      # 'Error while creating shared memory: unhandled system error, NCCL version 2.7.8'
      options: "--gpus=all --shm-size=2gb"
    workspace:
      clean: all
    steps:

    - bash: |
        echo $CUDA_VISIBLE_DEVICES
        echo $PYTORCH_VERSION
        lspci | egrep 'VGA|3D'
        whereis nvidia
        nvidia-smi
        which python && which pip
        python --version
        pip --version
        pip list
      displayName: 'Image info & NVIDIA'

    - bash: |
        set -e
        pip install -r requirements.txt
      condition: eq(variables['scope'], 'strategies')
      displayName: 'Install requirements'

    - bash: |
        set -e
        pip list
      displayName: 'Env details'

    - bash: python -m coverage run --source src/ -m pytest --ignore benchmarks -v --durations=50
      workingDirectory: tests/
      env:
        PL_RUN_CUDA_TESTS: "1"
      displayName: 'Testing: PyTorch standard'
      timeoutInMinutes: "35"

    - bash: bash run_standalone_tests.sh
      workingDirectory: tests/
      env:
        PL_RUN_CUDA_TESTS: "1"
        PL_STANDALONE_TESTS_SOURCE: "pytorch_lightning"
      displayName: 'Testing: PyTorch standalone tests'
      condition: eq(variables['PACKAGE_NAME'], 'pytorch')
      timeoutInMinutes: "35"
