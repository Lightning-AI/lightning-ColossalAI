# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  tags:
    include:
      - '*'
  branches:
    include:
      - "main"
      - "refs/tags/*"

pr:
  branches:
    include:
      - "main"
  paths:
    include:
      - ".azure/gpu-tests.yml"
      - "tests/**"
      - "pyproject.toml"  # includes pytest config
      - "requirements.txt"
      - "_requirements/**"
      - "src/**"
    exclude:
      - "*.md"
      - "**/*.md"

jobs:
  - job: testing
    # how long to run the job before automatically cancelling
    timeoutInMinutes: "30"
    # how much time to give 'run always even if cancelled tasks' before stopping them
    cancelTimeoutInMinutes: "2"
    strategy:
      matrix:
        'PL dep.':
          image: "pytorch/pytorch:1.13.1-cuda11.6-cudnn8-runtime"
          dependency: "pytorch-lightning"
        'Lightning dep.':
          image: "pytorch/pytorch:1.13.1-cuda11.6-cudnn8-runtime"
          dependency: "lightning"
    pool: 'lit-rtx-3090'
    variables:
      DEVICES: $( python -c 'print("$(Agent.Name)".split("_")[-1])' )
      FREEZE_REQUIREMENTS: "1"
    container:
      image: $(image)
      # default shm size is 64m. Increase it to avoid:
      # 'Error while creating shared memory: unhandled system error, NCCL version 2.7.8'
      options: "--gpus=all --shm-size=2gb"
    workspace:
      clean: all
    steps:

    - bash: |
        echo "##vso[task.setvariable variable=CUDA_VISIBLE_DEVICES]$(DEVICES)"
        cuda_ver=$(python -c "import torch ; print(''.join(map(str, torch.version.cuda.split('.')[:2])))")
        echo "##vso[task.setvariable variable=CUDA_VERSION_MM]$cuda_ver"
        echo "##vso[task.setvariable variable=TORCH_URL]https://download.pytorch.org/whl/cu${cuda_ver}/torch_stable.html"
      displayName: 'set env. vars'

    - bash: |
        echo $CUDA_VISIBLE_DEVICES
        echo $PYTORCH_VERSION
        lspci | egrep 'VGA|3D'
        whereis nvidia
        nvidia-smi
        which python && which pip
        python --version
        pip --version
        pip list
      displayName: 'Image info & NVIDIA'

    - script: |
        python .azure/adjust-requirements.py $(dependency)
        cat requirements.txt
      displayName: 'Adjust dependencies'

    - bash: pip install -e '.[test]' -U -r requirements.txt --find-links ${TORCH_URL}
      # TODO: repeat this requirements.txt as it includes URL which is dropped in package req.
      displayName: 'Install package & extras'

    - bash: |
        set -e
        pip list
        python -c "import torch ; mgpu = torch.cuda.device_count() ; assert mgpu == 2, f'GPU: {mgpu}'"
      displayName: 'Env details'

    - bash: python -m coverage run --source lightning_colossalai -m pytest --ignore _standalone -v --durations=50
      workingDirectory: tests
      displayName: 'Testing: standard'
      timeoutInMinutes: "10"

    - bash: bash run_standalone_tests.sh
      workingDirectory: tests
      env:
        PL_RUN_CUDA_TESTS: "1"
      displayName: 'Testing: standalone tests'
      timeoutInMinutes: "10"

    - bash: |
        python -m coverage report
        python -m coverage xml
        python -m coverage html
        python -m codecov --token=$(CODECOV_TOKEN) --commit=$(Build.SourceVersion) \
          --flags=gpu,pytest --name="GPU-coverage" --env=linux,azure
        ls -l
      workingDirectory: tests
      displayName: 'Statistics'
